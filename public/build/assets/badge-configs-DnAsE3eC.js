import{_ as h}from"./preload-helper-BfFHrpNk.js";import{ModernTable as p}from"https://cdn.jsdelivr.net/npm/modern-table-js@1.0.6/core/ModernTable.js";import{D as B}from"./delete-QRht9yhg.js";import{f as C,c as S,a as D,b as _,g as T,d as x}from"./formatDate-Cz7pwXTf.js";import{h as v}from"./handlePermissionButtons-TMegtcb-.js";import{A}from"./ActionButton-4FF2Dtnd.js";import{s as i}from"./modalHandler-Bg5eHBCv.js";import{f as w}from"./fetchAxios-Cye8cR7v.js";import{f as E,D as I}from"./DateRangePicker-pIMxf9xW.js";import"./axiosClient-8LtfCK6A.js";import"./badgeUpdater-D1PKXa5-.js";import"./_commonjsHelpers-CqkleIqs.js";const F=T(),u={month:null,year:null,start_date:null,end_date:null,date:F},t={tableId:"#table-badge-configs",urlWeb:"/admin/badge-configs/",urlApi:"/api/badge-configs",deleteMultipleUrl:"/api/badge-configs/multiple/delete",tableName:"badge-configs",exportColumns:["menu_url","model_class"],createButtonText:"Add Badge Config",itemName:"badge-configs",pageLength:10,lengthMenu:[5,10,25,50],defaultOrder:[[0,"desc"]],dateRangeButtonText:"Filter Tanggal",apiErrorPrefix:"Badge Configs API Error:",dataLoadedMessage:"✅ Data loaded:",createButtonId:"btnTambah",bulkDeleteButtonId:"delete-selected-btn",dateRangeSelector:"#idFilterDateRange",dateRangeTextSelector:"#idFilterDateRange .date-range-text",actionButtonSelector:"#btnAction",formSelector:".FormAction",deleteButtonClass:".btn-delete",createButtonClass:".btnTambah",updateButtonClass:".buttonUpdate",showButtonClass:".buttonShow"};let c=!1,d={...u};const k=()=>c?Object.fromEntries(Object.entries(d).filter(([o,e])=>e!==null)):{},m=o=>{c=!0,d={...d,...o,date:null}},f=()=>{c=!1,d={...u}},$=D({buttonId:t.bulkDeleteButtonId,countSelector:".selected-count",onSelectionChange:(o,{count:e,hasSelection:a})=>{console.log(`ℹ️ Selection changed: ${e} ${t.itemName} selected`)}}),L=x({deleteUrl:t.deleteMultipleUrl,itemName:t.itemName,onSuccess:(o,e)=>{console.log("✅ Bulk delete success:",o.length,`${t.itemName} deleted`)},onError:o=>{console.error("❌ Bulk delete failed:",o)}});function M(){return C(new Date),{...S({url:t.urlApi,beforeSend:e=>Object.assign(e,k()),onSuccess:e=>{var n;const a=(n=e==null?void 0:e.meta)==null?void 0:n.permissions;a&&v(a)},onError:(e,a,n)=>{console.error(t.apiErrorPrefix,{error:e,status:a,message:n})}}),columns:[{data:"DT_RowIndex",title:"No",orderable:!1,searchable:!1},{data:"menu_url",title:"Menu URL",orderable:!0},{data:"model_class",title:"Model Class",orderable:!0},{data:"date_field",title:"Date Field",orderable:!0},{data:"is_active",title:"Status",orderable:!0,render:e=>{const a=e==1||e===!0;return`<span class="badge ${a?"bg-success":"bg-danger"}">${a?"Active":"Inactive"}</span>`}},{data:"description",title:"Description",orderable:!0},{data:"actions",title:"Action",className:"text-center",orderable:!1,searchable:!1,render:(e,a,n)=>A(n)}],buttons:_({tableName:t.tableName,exportColumns:t.exportColumns,bulkDeleteHandler:L,bulkDeleteButtonId:t.bulkDeleteButtonId,includeCreateButton:!0,createButtonId:t.createButtonId,createButtonText:t.createButtonText,createHandler:()=>{i(`${t.urlWeb}create`,"create")}}),pageLength:t.pageLength,lengthMenu:t.lengthMenu,order:t.defaultOrder,ordering:!0,searching:!0,columnSearch:!0,paging:!0,select:!0,responsive:!0,theme:"auto",onSelectionChange:$,onError:e=>console.error("❌ Table error:",e)}}function y(o,e,a){o||e?m({month:o||null,year:e||null}):f(),a.reload()}function R(o,e){if(o){m({start_date:o.start,end_date:o.end});const a=document.querySelector(t.dateRangeTextSelector);a&&(a.textContent=o.formatted)}else f();e.reload()}function g(){const o=M(),e=new p(t.tableId,{...o,initComplete:(a,n)=>{console.log(t.dataLoadedMessage,a.length,"records")}});return E((a,n)=>{y(a,n,e)}),new I(t.dateRangeSelector,{buttonText:t.dateRangeButtonText,onDateSelect:a=>{R(a,e)}}),e}function b(o){B({buttonSelector:t.deleteButtonClass,deleteUrl:t.urlApi+"/",tableSelector:t.tableId,onDeleteSuccess:()=>{o.reload(),o.clearSelection()}}),document.body.addEventListener("click",e=>{const a=e.target.closest(t.updateButtonClass),n=e.target.closest(t.showButtonClass),r=e.target.matches(t.actionButtonSelector);if(e.target.closest(t.createButtonClass))e.preventDefault(),i(`${t.urlWeb}create`,"create");else if(a){e.preventDefault();const l=`${t.urlWeb}${a.dataset.id}/edit`;i(l,"edit")}else if(n){e.preventDefault();const l=`${t.urlWeb}${n.dataset.id}`;i(l,"show")}else if(r){e.preventDefault();const l=document.querySelector(t.formSelector);l&&w({url:l.action,method:l.method,data:new FormData(l)},"simpan",()=>o.reload())}})}document.addEventListener("shown.bs.modal",async o=>{const e=o.target;(async()=>{try{if(!document.querySelector("link[data-tomselect]")){const n=document.createElement("link");n.rel="stylesheet",n.href="https://cdn.jsdelivr.net/npm/tom-select/dist/css/tom-select.bootstrap5.css",n.dataset.tomselect="true",document.head.appendChild(n)}await h(()=>import("https://cdn.jsdelivr.net/npm/tom-select/dist/js/tom-select.complete.min.js"),[]);const a=e.querySelector(".date-fields-select");a&&!a.tomselect&&new TomSelect(a,{create:!0,maxItems:null,placeholder:"Pilih atau ketik field tanggal...",onCreate:function(n,r){if(!n||n.trim().length<2){r();return}const s=n.trim();if(!/^[a-zA-Z_][a-zA-Z0-9_]*$/.test(s)){showToast("Field name harus format valid (contoh: created_at, registration_date)","error"),r();return}r({value:s,text:s}),showToast(`Field '${s}' berhasil ditambahkan`,"success")},render:{option:function(n,r){return`<div>${r(n.text)}</div>`},item:function(n,r){return`<div>${r(n.text)}</div>`}}})}catch(a){console.error("Error loading select:",a)}})()});document.addEventListener("DOMContentLoaded",()=>{const o=g();b(o)});function V(){if(document.readyState!=="loading"){const o=g();b(o)}}export{V as default};
