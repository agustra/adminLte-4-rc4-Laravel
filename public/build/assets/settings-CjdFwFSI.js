import d from"./axiosClient-DXQnQ5LA.js";console.log("‚öôÔ∏è Settings module loading...");document.getElementById("spinner");function a(e,t){typeof window.showToast=="function"?window.showToast(e,t):typeof toastr<"u"?toastr[t](e):(console.log(`${t.toUpperCase()}: ${e}`),alert(e))}setTimeout(()=>{const e=document.getElementById("settingsForm");e&&(e.onsubmit=window.submitForm)},100);function g(){u(),p()}function u(){const e=document.getElementById("settingsForm");e&&(e.removeAttribute("onsubmit"),e.onsubmit=window.submitForm)}window.openFileManager=function(e){console.log("üîç Opening FileManager for field:",e),window.currentInputId=e;const t=window.open("/admin/system-filemanager?type=image","FileManager","width=1000,height=700,scrollbars=yes,resizable=yes");if(console.log("üìÇ FileManager popup opened:",t),!t||t.closed){console.error("‚ùå Failed to open FileManager popup"),a("Failed to open FileManager. Please check popup blocker.","error");return}window.SetUrl=function(o,l){console.log("üìÅ FileManager callback received:",{urls:o,file_path:l});const s=Array.isArray(o)?o[0]:o,n=(s==null?void 0:s.url)||s;console.log("üîó File object:",s),console.log("üîó Extracted URL:",n);const i=document.getElementById(window.currentInputId);if(console.log("üéØ Target input element:",i),i&&n){let r=l;if(!r&&n){const c=n.split("/storage/");c.length>1&&(r=c[1])}console.log("üìÇ Final path to save:",r),i.value=r||n,console.log("‚úÖ Input value set to:",i.value),m(window.currentInputId,n),t.close(),delete window.currentInputId,a("Logo selected successfully","success")}else console.error("‚ùå Missing data:",{inputElement:i,url:n,fileObj:s})}};function m(e,t){console.log("üñºÔ∏è Updating preview for:",e,"with URL:",t);const o=document.getElementById(e+"_preview");console.log("üéØ Preview div found:",o),o?t?(o.innerHTML=`
                <img src="${t}" alt="Logo Preview" class="img-thumbnail" style="max-height: 100px;">
                <div class="mt-1">
                    <small class="text-muted">Selected: ${t.split("/").pop()}</small>
                </div>
            `,console.log("‚úÖ Preview updated with image")):(o.innerHTML='<small class="text-muted">No logo selected</small>',console.log("‚ö†Ô∏è Preview cleared - no URL provided")):console.error("‚ùå Preview div not found:",e+"_preview")}window.submitForm=async function(e){e.preventDefault(),e.stopPropagation();const t=document.getElementById("settingsForm"),o=t.querySelector('button[type="submit"]'),l=o.innerHTML;o.disabled=!0,o.innerHTML='<i class="bi bi-arrow-repeat" style="animation: spin 1s linear infinite;"></i> Saving...';const s=new FormData(t);try{const i=(await d.post(t.action,s,{headers:{"Content-Type":"multipart/form-data"}})).data;if(console.log("Settings response:",i),i.message)a(i.message,"success"),o.innerHTML='<i class="bi bi-check-lg"></i> Saved!',o.classList.add("btn-success"),o.classList.remove("btn-primary"),setTimeout(()=>{window.location.reload()},1e3);else throw new Error("No message in response")}catch(n){console.error("Error:",n),a("Error saving settings","error"),o.innerHTML=l,o.disabled=!1}};function p(){console.log("üìÅ FileManager picker ready")}document.addEventListener("DOMContentLoaded",function(){console.log("Settings: DOM ready, initializing..."),g(),console.log("Settings: Initialization complete")});function f(){console.log("‚öôÔ∏è Settings module initialized successfully!")}export{f as default,g as initializeSettings};
